NEWS pricesensitivitymeter
==========================================================================

version 1.2.1 (Release date: 2021-03-21)
==============

Changes:
* fixes URL in package description
* fixes date formatting in DESCRIPTION

version 1.2 (Release date: 2021-03-21)
==============

Changes:
* new function psm_plot() for automatic plotting of the result
* package now also supports input in tibble format
* fix in plotting vignette: fix position of indifference price point
* fixes in vignette formatting to emphasize function names
* change of Github URLs due to change of Github username
* fix of external URLs that have changed
* housekeeping: re-factoring code

version 1.1.1 (Release date: 2019-08-23)
==============
Changes:
* fixes a markdown issue in the README file

version 1.1.0 (Release date: 2019-08-22)
==============

Changes:
* adds the parameter interpolation_steps that lets users define the granularity of the interpolation between the observed prices
* fixes a bug that caused respondents with intransitive price preferences to be used in the analysis when using psm_analysis_weighted() (and adds some unit testing to check this in the future)
* corrects the "Interpolation in Small Samples" vignette: now shows correctly "not cheap" instead of "cheap" and "not expensive" instead of "expensive"
* extends unit test coverage

version 1.0.1 (Release date: 2019-04-29)
==============

Changes:
* makes some tests slightly more lenient to account for rounding differences

version 1.0.0 (Release date: 2019-04-28)
==============

Changes:
* adds the psm_analysis_weighted() function to deal with weighted input data. This requires the survey package.
* adds the argument intersection_method to define how to calculate the price points in case there are multiple intersections (should be a rare case)
* amends the psm class definition and the summary function for the psm class to account for weighted/unweighted data
* bug fix: if a respondent has the same answer for both the "cheap" and the "expensive" price, the interpolation of purchase probabilities in the Newton Miller Smith extension now returns non-empty answers
* bug fix: if "too cheap" information is missing, skip some calculations


version 0.4.1 (Release date: 2018-10-21)
==============

Changes:

* fixes issue with calculation of "point of marginal cheapness" and "point of marginal expensiveness" (acceptable price range). also affects documentation and visualization vignette. thanks to athib2 for flagging it
* fixes bug in calculation of % of removed cases (did show only 0/1 before, now proper percentages)
* fixes typos in summary() function and in the documentation
* adds unit testing for Newton Miller Smith input as dataframe

version 0.3.3 (Release date: 2018-10-14)
==============

Changes:

* fixes an issue in the unit testing with an if condition with length greater 1 (thanks to Tomas Kalibera for automated testing in R-devel)

version 0.3.2 (Release date: 2018-05-12)
==============

Changes:

* changing links from http://... to https://...


version 0.3.0 (Release date: 2018-05-10)
==============

Changes:

* adding optional argument to interpolate between price points
* adding a vignette for the interpolate argument
* edits in the README: fixing typos, amending the installation instructions


version 0.2.1 (Release date: 2018-04-12)
==============

Changes:

* addressing feedback from CRAN submit: adding proper citation of the main publication in the DESCRIPTION file


version 0.2 (Release date: 2018-04-11)
==============

Changes:

* adding support for running the analysis without a "too cheap" price
* adding a charting vignette
* adding automated testing of function inputs and function outputs
* renaming the main function from "PSManalysis" to "psm_analysis" (for readability reasons)
* improving smoothing of trial/revenue optimization when using Newton Miller Smith extension: setting up the price matrix with continuous price steps between the minimum and the maximum to avoid jumps that come from the lack of price points in a specific area
* refining the data input checks (resulting from the c() implementation of hierarchies between data classes)


version 0.1 (Release date: 2017-05-20)
==============

Changes:

* first complete Github version incl. function documentation
